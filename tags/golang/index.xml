<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Golang on 項 思 偉 ~ Aal Izz Well!</title>
    <link>https://daveixiang.github.io/tags/golang/index.xml</link>
    <description>Recent content in Golang on 項 思 偉 ~ Aal Izz Well!</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <atom:link href="https://daveixiang.github.io/tags/golang/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>go tool: no such tool &#39;6g&#39;</title>
      <link>https://daveixiang.github.io/articles/2017_04_07_go_tool_no_such_tool_6g/</link>
      <pubDate>Fri, 07 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>https://daveixiang.github.io/articles/2017_04_07_go_tool_no_such_tool_6g/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;Problem&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-txt&#34;&gt;davei@davei:/tmp&amp;gt; go tool 6g test.go
go tool: no such tool &amp;quot;6g&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Solution&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-txt&#34;&gt;6g were renamed to &amp;quot;compile&amp;quot; since Go 1.5. So use &amp;quot;compile&amp;quot; instead.
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>go tool: no such tool &#39;6l&#39;</title>
      <link>https://daveixiang.github.io/articles/2017_04_07_go_tool_no_such_tool_6l/</link>
      <pubDate>Fri, 07 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>https://daveixiang.github.io/articles/2017_04_07_go_tool_no_such_tool_6l/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;Problem&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-txt&#34;&gt;davei@davei:/tmp&amp;gt; go tool 6l test.o
go tool: no such tool &amp;quot;6l&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Solution&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-txt&#34;&gt;6l and friends were renamed to &amp;quot;link&amp;quot; since Go 1.5. So use &amp;quot;link&amp;quot; instead.
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Compile influxdb 0.11.1 from source code</title>
      <link>https://daveixiang.github.io/articles/2017_03_13_compile_influxdb_0.11.1_from_source_code/</link>
      <pubDate>Mon, 13 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>https://daveixiang.github.io/articles/2017_03_13_compile_influxdb_0.11.1_from_source_code/</guid>
      <description>

&lt;h2 id=&#34;prepare-essential-directories-and-environment-variables&#34;&gt;Prepare essential directories and environment variables&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;export GOPATH=/src/influxdb/

mkdir -p $GOPATH/src/github.com/influxdata/

cd $GOPATH/src/github.com/influxdata/

export PATH=$GOPATH/bin:$PATH
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;installing-gdm&#34;&gt;Installing GDM&lt;/h2&gt;

&lt;p&gt;InfluxDB uses gdm to manage dependencies. Install it by running the following:&lt;/p&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;go get github.com/sparrc/gdm
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id=&#34;extract-source-code&#34;&gt;Extract source code&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;tar zxf ~/Downloads/influxdb-0.11.1.tar.gz

ln -sf influxdb-0.11.1/ influxdb
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;installing-influxdb-dependencies&#34;&gt;Installing InfluxDB dependencies&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd influxdb

gdm restore
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;build-and-install-the-binaries&#34;&gt;Build and install the binaries&lt;/h2&gt;

&lt;p&gt;Run the following command:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;go clean ./...

go install ./...
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;and wait for a comment, the binaries will be installed to &lt;strong&gt;$GOPATH/bin&lt;/strong&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;ls -l $GOPATH/bin
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;the output like the following:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-txt&#34;&gt;total 72624
-rwxr-xr-x 1 davei davei  7822896 Mar 13 19:22 gdm
-rwxr-xr-x 1 davei davei 10680057 Mar 13 19:26 influx
-rwxr-xr-x 1 davei davei 17539115 Mar 13 19:26 influxd
-rwxr-xr-x 1 davei davei  8591810 Mar 13 19:26 influx_inspect
-rwxr-xr-x 1 davei davei  6094083 Mar 13 19:26 influx_stress
-rwxr-xr-x 1 davei davei 11930449 Mar 13 19:26 influx_tsm
-rwxr-xr-x 1 davei davei  5911435 Mar 13 19:26 stress_test_server
-rwxr-xr-x 1 davei davei  3467812 Mar 13 19:26 test_client
-rwxr-xr-x 1 davei davei  2312705 Mar 13 19:26 urlgen
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;test-the-influxdb-binaries-just-built&#34;&gt;Test the InfluxDB binaries just built&lt;/h2&gt;

&lt;p&gt;generate default influxdb configuration file and data directory&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mkdir -p $GOPATH/etc

cd $GOPATH

bin/influxd config &amp;gt; etc/influxd.conf

mkdir -p $GOPATH/var/lib/influxdb
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;specific bind address and data directory&lt;/p&gt;

&lt;p&gt;start the InfluxDB server&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;bin/influxd -config  etc/influxd.conf
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;the output like the following:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-txt&#34;&gt;
 8888888           .d888 888                   8888888b.  888888b.
   888            d88P&amp;quot;  888                   888  &amp;quot;Y88b 888  &amp;quot;88b
   888            888    888                   888    888 888  .88P
   888   88888b.  888888 888 888  888 888  888 888    888 8888888K.
   888   888 &amp;quot;88b 888    888 888  888  Y8bd8P&#39; 888    888 888  &amp;quot;Y88b
   888   888  888 888    888 888  888   X88K   888    888 888    888
   888   888  888 888    888 Y88b 888 .d8&amp;quot;&amp;quot;8b. 888  .d88P 888   d88P
 8888888 888  888 888    888  &amp;quot;Y88888 888  888 8888888P&amp;quot;  8888888P&amp;quot;

2017/03/13 19:42:23 InfluxDB starting, version unknown, branch unknown, commit unknown
2017/03/13 19:42:23 Go version go1.7.5, GOMAXPROCS set to 4
2017/03/13 19:42:23 Using configuration at: etc/influxd.conf
[meta] 2017/03/13 19:42:23 Starting meta service
[meta] 2017/03/13 19:42:23 Listening on HTTP: 127.0.0.1:8091
[metastore] 2017/03/13 19:42:23 Using data dir: /src/influxdb/var/lib/influxdb/meta
[metastore] 2017/03/13 19:42:23 Node at localhost:8088 [Follower]
[metastore] 2017/03/13 19:42:25 Node at localhost:8088 [Leader]. peers=[localhost:8088]
[store] 2017/03/13 19:42:25 Using data dir: /src/influxdb/var/lib/influxdb/data
[tsm1wal] 2017/03/13 19:42:25 tsm1 WAL starting with 10485760 segment size
[tsm1wal] 2017/03/13 19:42:25 tsm1 WAL writing to /src/influxdb/var/lib/influxdb/wal/_internal/monitor/1
[cacheloader] 2017/03/13 19:42:25 reading file /src/influxdb/var/lib/influxdb/wal/_internal/monitor/1/_00001.wal, size 25887
[cacheloader] 2017/03/13 19:42:25 reading file /src/influxdb/var/lib/influxdb/wal/_internal/monitor/1/_00002.wal, size 9629
[cacheloader] 2017/03/13 19:42:25 reading file /src/influxdb/var/lib/influxdb/wal/_internal/monitor/1/_00003.wal, size 0
[handoff] 2017/03/13 19:42:25 Starting hinted handoff service
[monitor] 2017/03/13 19:42:25 &#39;hh&#39; registered for diagnostics monitoring
[handoff] 2017/03/13 19:42:25 Using data dir: /src/influxdb/var/lib/influxdb/hh
[subscriber] 2017/03/13 19:42:25 opened service
[monitor] 2017/03/13 19:42:25 Starting monitor system
[monitor] 2017/03/13 19:42:25 &#39;build&#39; registered for diagnostics monitoring
[monitor] 2017/03/13 19:42:25 &#39;runtime&#39; registered for diagnostics monitoring
[monitor] 2017/03/13 19:42:25 &#39;network&#39; registered for diagnostics monitoring
[monitor] 2017/03/13 19:42:25 &#39;system&#39; registered for diagnostics monitoring
[cluster] 2017/03/13 19:42:25 Starting cluster service
[shard-precreation] 2017/03/13 19:42:25 Starting precreation service with check interval of 10m0s, advance period of 30m0s
[snapshot] 2017/03/13 19:42:25 Starting snapshot service
[copier] 2017/03/13 19:42:25 Starting copier service
[admin] 2017/03/13 19:42:25 Starting admin service
[admin] 2017/03/13 19:42:25 Listening on HTTP: 127.0.0.1:8083
[continuous_querier] 2017/03/13 19:42:25 Starting continuous query service
[httpd] 2017/03/13 19:42:25 Starting HTTP service
[httpd] 2017/03/13 19:42:25 Authentication enabled: false
[httpd] 2017/03/13 19:42:25 Listening on HTTP: 127.0.0.1:8086
[retention] 2017/03/13 19:42:25 Starting retention policy enforcement service with check interval of 30m0s
[monitor] 2017/03/13 19:42:25 Storing statistics in database &#39;_internal&#39; retention policy &#39;monitor&#39;, at interval 10s
[run] 2017/03/13 19:42:25 Listening for signals
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Compile static docker without docker in docker</title>
      <link>https://daveixiang.github.io/articles/2017_01_16_compile_static_docker_without_docker_in_docker/</link>
      <pubDate>Mon, 16 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>https://daveixiang.github.io/articles/2017_01_16_compile_static_docker_without_docker_in_docker/</guid>
      <description>

&lt;h1 id=&#34;install-dependencies&#34;&gt;Install dependencies&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Install xfs btrfs packages&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;emerge --ask sys-fs/btrfs-progs sys-fs/xfsprogs
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Install device mapper&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;export LVM2_VERSION=2.02.103 
mkdir -p /usr/local/src/lvm2 &amp;amp;&amp;amp;
curl -fsSL &amp;quot;https://mirrors.kernel.org/sourceware/lvm2/LVM2.${LVM2_VERSION}.tgz&amp;quot; | tar -xzC /usr/local/src/lvm2 --strip-components=1

cd /usr/local/src/lvm2 \
        &amp;amp;&amp;amp; ./configure \
                --build=&amp;quot;$(gcc -print-multiarch)&amp;quot; \
                --enable-static_link \
        &amp;amp;&amp;amp; make device-mapper \
        &amp;amp;&amp;amp; make install_device-mapper
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;compile-runc-binary&#34;&gt;Compile runc binary&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;get the runc source code&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mkdir -p /go/src/github.com/opencontainers/

cd /go/src/github.com/opencontainers/

git clone https://github.com/opencontainers/runc.git
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Compile static runc binary&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd runc

git checkout v1.0.0-rc2

make static
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Install runc&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mkdir -p /go/bin

cp runc /go/bin/docker-runc
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;compile-containerd-binary&#34;&gt;Compile containerd binary&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;get the containerd source code&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mkdir -p /go/src/github.com/docker/

cd /go/src/github.com/docker/

git clone https://github.com/docker/containerd.git
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Compile static containerd binary&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd containerd

git checkout v0.2.5

export GOPATH=/go

make static
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Install containerd&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cp bin/containerd /go/bin/docker-containerd

cp bin/containerd-shim /go/bin/docker-containerd-shim

cp bin/ctr /go/bin/docker-ctr
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;compile-docker-binary&#34;&gt;Compile docker binary&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Get the docker source code&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd /go/src/github.com/docker/

git clone https://github.com/docker/docker.git
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Compile static docker binary&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd docker

git checkout v1.12.6

export GOPATH=/go
export AUTO_GOPATH=1

hack/make.sh binary
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Install docker binary&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cp bundles/latest/binary-client/docker /go/bin/docker

cp bundles/latest/binary-daemon/dockerd /go/bin/dockerd

cp bundles/latest/binary-daemon/docker-proxy /go/bin/docker-proxy
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;check-the-build-result&#34;&gt;Check the build result&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Start docker daemon&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;dockerd --log-level=error
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;and the output is:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-txt&#34;&gt;WARN[0000] containerd: low RLIMIT_NOFILE changing to max  current=1024 max=4096
ERRO[0001] devmapper: Udev sync is not supported. This will lead to data loss and unexpected behavior. Install a dynamic binary to use devicemapper or select a different storage driver. For more information, see https://docs.docker.com/engine/reference/commandline/daemon/#daemon-storage-driver-option
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Checkout docker info&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker info
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;the client and daemon info:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-txt&#34;&gt;Containers: 0
 Running: 0
 Paused: 0
 Stopped: 0
Images: 0
Server Version: 1.12.6
Storage Driver: overlay
 Backing Filesystem: xfs
Logging Driver: json-file
Cgroup Driver: cgroupfs
Plugins:
 Volume: local
 Network: host bridge null overlay
Swarm: inactive
Runtimes: runc
Default Runtime: runc
Security Options: apparmor
Kernel Version: 4.4.39-gentoo
Operating System: Gentoo/Linux
OSType: linux
Architecture: x86_64
CPUs: 4
Total Memory: 7.796 GiB
Name: meta
ID: ZZOZ:GWOT:4LCM:5P7V:F2JW:2S3F:LTLM:H5N4:TX5W:DOR3:BVM6:XYZO
Docker Root Dir: /var/lib/docker
Debug Mode (client): false
Debug Mode (server): false
Registry: https://index.docker.io/v1/
WARNING: No swap limit support
Insecure Registries:
 127.0.0.0/8
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;pull &lt;em&gt;hello-world&lt;/em&gt; image&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker pull hello-world
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;and the output is:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-txt&#34;&gt;Using default tag: latest
latest: Pulling from library/hello-world
c04b14da8d14: Pull complete 
Digest: sha256:0256e8a36e2070f7bf2d0b0763dbabdd67798512411de4cdcf9431a1feb60fd9
Status: Downloaded newer image for hello-world:latest
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;run &lt;em&gt;hello-world&lt;/em&gt; container&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run hello-world
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;the output is:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-txt&#34;&gt;Hello from Docker!
This message shows that your installation appears to be working correctly.

To generate this message, Docker took the following steps:
 1. The Docker client contacted the Docker daemon.
 2. The Docker daemon pulled the &amp;quot;hello-world&amp;quot; image from the Docker Hub.
 3. The Docker daemon created a new container from that image which runs the
    executable that produces the output you are currently reading.
 4. The Docker daemon streamed that output to the Docker client, which sent it
    to your terminal.

To try something more ambitious, you can run an Ubuntu container with:
 $ docker run -it ubuntu bash

Share images, automate workflows, and more with a free Docker Hub account:
 https://hub.docker.com

For more examples and ideas, visit:
 https://docs.docker.com/engine/userguide/
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Compile Golang from source code</title>
      <link>https://daveixiang.github.io/articles/2017_01_22_compile_golang_from_source_code/</link>
      <pubDate>Thu, 12 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>https://daveixiang.github.io/articles/2017_01_22_compile_golang_from_source_code/</guid>
      <description>

&lt;h1 id=&#34;introduction&#34;&gt;Introduction&lt;/h1&gt;

&lt;p&gt;Go is a nice language started by Google. A nice advantage is that it
compiles to native code and the binary does not have additional
dependencies. Performance and low resource usage are focused on, even
though I personally don&amp;rsquo;t like the gargabe collection based memory
cleanup.&lt;/p&gt;

&lt;h1 id=&#34;installation&#34;&gt;Installation&lt;/h1&gt;

&lt;h2 id=&#34;first-start-with-go-1-4&#34;&gt;First start with Go 1.4&lt;/h2&gt;

&lt;p&gt;Since Go version 1.5 you need Go itself to compile it. So we first
start with Go 1.4:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Download &lt;a href=&#34;https://storage.googleapis.com/golang/go1.4.3.src.tar.gz&#34;&gt;go1.4.3.src.tar.gz&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Untar it to &lt;em&gt;/go/go1.4/&lt;/em&gt; directory:&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;tar zxf go1.4.3.src.tar.gz -C /go

cd /go

mv go go1.4
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Build Go 1.4 with:&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd /go/go1.4/src

./make.bash
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;After some minutes you have a working Go 1.4 installation.&lt;/p&gt;

&lt;p&gt;If get the following error:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-txt&#34;&gt;cannot load DWARF output from $WORK/os/user/_obj//_cgo_.o: decoding dwarf section info at offset 0x4: unsupported version 0
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Using Go 1.4 to bootstrap a later version, disable cgo with:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;env CGO_ENABLED=0 ./make.bash
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;compile-the-current-version-go1-7-5&#34;&gt;Compile the current version (go1.7.5)&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Download &lt;a href=&#34;https://storage.googleapis.com/golang/go1.7.5.src.tar.gz&#34;&gt;go1.7.5.src.tar.gz&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Untar it to &lt;em&gt;/go/go1.6&lt;/em&gt; directory:&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;tar zxf go1.7.5.src.tar.gz -C /go

cd /go

mv go go1.7
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Tell Go where to find the Go compiler to bootstrap with:&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;export GOROOT_BOOTSTRAP=/go/go1.4
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Now build Go 1.7:&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd /go/go1.7/src

./make.bash
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;After some more minutes, we finally have working Go 1.7 installation.&lt;/p&gt;

&lt;h2 id=&#34;set-up-environment-variables-for-convenience&#34;&gt;Set up environment variables for convenience&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Set the root of the Go installation:&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;export GOROOT=/go/go1.7
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Tell go where to store additional packages downloaded with &amp;ldquo;go get&amp;rdquo;:&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;export GOPATH=&amp;lt;path/to/addons&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;And finally add the bin directory to your PATH:&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;export PATH=$PATH:$GOROOT/bin
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;test-the-golang-compiler&#34;&gt;Test the Golang compiler&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Create a file &amp;ldquo;hello.go&amp;rdquo; with content&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;package main
import &amp;quot;fmt&amp;quot;
func main() {
        fmt.Println(&amp;quot;Hello World&amp;quot;)
}
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Compile the sample code:&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;go build hello.go
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Run with:&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./hello
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>