<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Linux on 項 思 偉 ~ Aal Izz Well!</title>
    <link>https://daveixiang.github.io/categories/linux/</link>
    <description>Recent content in Linux on 項 思 偉 ~ Aal Izz Well!</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 26 Jun 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://daveixiang.github.io/categories/linux/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Building latest git for CentOS</title>
      <link>https://daveixiang.github.io/articles/2017_06_26_building_latest_git_for_centos/</link>
      <pubDate>Mon, 26 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>https://daveixiang.github.io/articles/2017_06_26_building_latest_git_for_centos/</guid>
      <description>Install basic packages needed to compile RPMs  yum install make gcc perl-ExtUtils-MakeMaker \ rpmdevtools curl-devel expat-devel gettext-devel openssl-devel zlib-devel   Get a git SRPM to build from Fedora Package  wget https://kojipkgs.fedoraproject.org//packages/git/2.7.5/1.fc24/src/git-2.7.5-1.fc24.src.rpm rpm -i ./git-2.7.5-1.fc24.src.rpm   Install dependencies needed to compile git RPMs  yum install asciidoc xmlto desktop-file-utils emacs libgnome-keyring-devel \ pkgconfig bash-completion   Go to SPECS directory and try to build the RPMs:  cd rpmbuild/SPECS/ rpmbuild -ba git.</description>
    </item>
    
    <item>
      <title>RPM build chroot</title>
      <link>https://daveixiang.github.io/articles/2017_06_26_rpm_build_chroot/</link>
      <pubDate>Mon, 26 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>https://daveixiang.github.io/articles/2017_06_26_rpm_build_chroot/</guid>
      <description> RPM build chroot  Create the chroot directory and initialize the rpm database  mkdir /root/buildroot rpm --root=/root/buildroot --rebuilddb   Install the latest centos-release package and yum inside  rpm --root=/root/buildroot -i ./centos-release-7-3.1611.el7.centos.x86_64.rpm yum --installroot=/root/buildroot install yum   With systemd-nspawn making it trivial to work inside the chroot  systemd-nspawn -D /root/buildroot/  </description>
    </item>
    
    <item>
      <title>LSI MegaRaid Monitor Linux</title>
      <link>https://daveixiang.github.io/articles/2017_06_02_lsi_megaraid_monitor_linux/</link>
      <pubDate>Fri, 02 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>https://daveixiang.github.io/articles/2017_06_02_lsi_megaraid_monitor_linux/</guid>
      <description> Installl MegaCLI tools  unzip 8.07.10_MegaCLI_Linux.zip cd 8.07.10_MegaCLI_Linux rpm2cpio MegaCli-8.07.10-1.noarch.rpm | cpio -idmv cd opt &amp;amp;&amp;amp; mv MegaRAID /opt /opt/MegaRAID/MegaCli/MegaCli64 -AdpAllInfo -aALL   Command reference  MegaCli64 -adpCount MegaCli64 -AdpGetTime –aALL MegaCli64 -AdpAllInfo -aAll MegaCli64 -LDInfo -LALL -aAll MegaCli64 -PDList -aAll MegaCli64 -AdpBbuCmd -GetBbuStatus -aALL MegaCli64 -AdpBbuCmd -GetBbuCapacityInfo -aALL MegaCli64 -AdpBbuCmd -GetBbuDesignInfo -aALL MegaCli64 -AdpBbuCmd -GetBbuProperties -aALL MegaCli64 -cfgdsply -aALL  </description>
    </item>
    
    <item>
      <title>Add OpenSuse Leap 42.2 repos</title>
      <link>https://daveixiang.github.io/articles/2017_03_31_opensuse_add_repos/</link>
      <pubDate>Fri, 31 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>https://daveixiang.github.io/articles/2017_03_31_opensuse_add_repos/</guid>
      <description> Remove previous repos  zypper repos | grep Yes | cut -f3 -d &#39;|&#39; | sed -e &amp;quot;s/ //&amp;quot; | awk &#39;{print &amp;quot;zypper rr &amp;quot; $1}&#39; | bash   Add the repos and refresh  zypper addrepo -f http://mirrors4.tuna.tsinghua.edu.cn/opensuse/distribution/leap/42.2/repo/oss/ openSUSE-leap-42.2-Oss zypper addrepo -f http://mirrors4.tuna.tsinghua.edu.cn/opensuse/distribution/leap/42.2/repo/non-oss/ openSUSE-leap-42.2-Non-Oss zypper addrepo -f http://mirrors4.tuna.tsinghua.edu.cn/opensuse/update/leap/42.2/oss openSUSE-leap-42.2-Update-Oss zypper addrepo -f http://mirrors4.tuna.tsinghua.edu.cn/opensuse/update/leap/42.2/non-oss/ openSUSE-leap-42.2-Update-Non-Oss zypper refresh  </description>
    </item>
    
    <item>
      <title>Notation meaning in top out</title>
      <link>https://daveixiang.github.io/articles/2017_03_30_notation_meaning_in_top_out/</link>
      <pubDate>Thu, 30 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>https://daveixiang.github.io/articles/2017_03_30_notation_meaning_in_top_out/</guid>
      <description>PID — Process Id  The task’s unique process ID, which periodically wraps, though never restarting at zero.   PPID — Parent Process Pid  The process ID of a task’s parent.   RUSER — Real User Name  The real user name of the task’s owner.   UID — User Id  The effective user ID of the task’s owner.   USER — User Name  The effective user name of the task’s owner.</description>
    </item>
    
    <item>
      <title>What is a system call (Linux)</title>
      <link>https://daveixiang.github.io/articles/2017_02_02_what_is_a_system_call_linux/</link>
      <pubDate>Thu, 02 Feb 2017 00:00:00 +0000</pubDate>
      
      <guid>https://daveixiang.github.io/articles/2017_02_02_what_is_a_system_call_linux/</guid>
      <description>An application program makes a system call to get the operating system to perform a service for it, like reading from a file.
System Calls in 32-bit Linux  To make a system call in 32-bit Linux, place the system call number in eax, then its arguments, in order, in ebx, ecx, edx, esi, edi, and ebp, then invoke int 0x80.
 Some system calls return information, usually in eax.</description>
    </item>
    
    <item>
      <title>Add Module to the Linux Kernel Source</title>
      <link>https://daveixiang.github.io/articles/2016_04_21_add_module_to_the_linux_kernel_source/</link>
      <pubDate>Thu, 21 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>https://daveixiang.github.io/articles/2016_04_21_add_module_to_the_linux_kernel_source/</guid>
      <description>Create module directory Create a directory skm inside drivers (which is in the Linux source code) for your module and put source code(skm.c) into it. It will looks like:
{LINUX_SRC_PATH}/drivers/skm/skm.c  and the source code file skm.c appears like:
#include &amp;lt;linux/module.h&amp;gt; #include &amp;lt;linux/version.h&amp;gt; #include &amp;lt;linux/kernel.h&amp;gt; static int __init skm_init(void) { printk(KERN_INFO &amp;quot;Hello Kernel Space!\n&amp;quot;); return 0; } static void __exit skm_exit(void) { printk(KERN_INFO &amp;quot;Bye Kernel Space!\n&amp;quot;); } module_init(skm_init); module_exit(skm_exit); MODULE_LICENSE(&amp;quot;GPL&amp;quot;); MODULE_AUTHOR(&amp;quot;Xiang Davei&amp;quot;); MODULE_DESCRIPTION(&amp;quot;Simple Kernel Module&amp;quot;)  Create Makefile file Create one Makefile inside skm and add obj-$(CONFG_SKM) += skm.</description>
    </item>
    
    <item>
      <title>Linux Hello World Module</title>
      <link>https://daveixiang.github.io/articles/2016_04_20_linux_helloworld_module/</link>
      <pubDate>Wed, 20 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>https://daveixiang.github.io/articles/2016_04_20_linux_helloworld_module/</guid>
      <description>Source Code  #include &amp;lt;linux/module.h&amp;gt; #include &amp;lt;linux/init.h&amp;gt; #include &amp;lt;linux/kernel.h&amp;gt; #include &amp;lt;linux/sched.h&amp;gt; static __init int hwm_init(void) { /* do_this() */ /* do_that() */ /* do_something_else() */ printk(KERN_INFO &amp;quot;hwm module being loaded\n&amp;quot;); return 0; } static __exit void hwm_exit(void) { /* undo_something_else() */ /* undo_that() */ /* undo_this() */ printk(KERN_INFO &amp;quot;hwm module being unloaded\n&amp;quot;); } module_init(hwm_init); module_exit(hwm_exit); MODULE_AUTHOR(&amp;quot;davei&amp;quot;); MODULE_LICENSE(&amp;quot;GPL&amp;quot;); MODULE_DESCRIPTION(&amp;quot;Hello World Module&amp;quot;); MODULE_INFO(flavor, &amp;quot;Linux&amp;quot;);   Makefile  obj-m := hwm.o ifeq ($(KERNELRELEASE),) KERNELDIR ?</description>
    </item>
    
  </channel>
</rss>